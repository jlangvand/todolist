/*
 *     Copyright © 2021 Mona Mahmoud Mousa
 *
 *      Authors (in alphabetical order):
 *      Ask Brandsnes Røsand
 *      Joakim Skogø Langvand
 *      Leonard Sandløkk Schiller
 *      Moaaz Bassam Yanes
 *      Mona Mahmoud Mousa
 *
 *     This file is part of Todolist.
 *
 *     Todolist is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     Todolist is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with Todolist.  If not, see <https://www.gnu.org/licenses/>.
 */

import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
  id 'todolist.java-application-conventions'
  id 'idea'
  id 'org.beryx.jlink' version '2.23.6'
}

repositories {
  mavenCentral()
}

def currentOS = DefaultNativePlatform.currentOperatingSystem
def platform
if (currentOS.isWindows()) {
  platform = 'win'
} else if (currentOS.isLinux()) {
  platform = 'linux'
} else if (currentOS.isMacOsX()) {
  platform = 'mac'
}

dependencies {
  implementation 'org.apache.commons:commons-text'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.5.1'
  implementation 'com.jfoenix:jfoenix:9.0.10'

  // JavaFX modules for building on the current system
  implementation "org.openjfx:javafx-base:15.0.1:${platform}"
  implementation "org.openjfx:javafx-controls:15.0.1:${platform}"
  implementation "org.openjfx:javafx-graphics:15.0.1:${platform}"
  implementation "org.openjfx:javafx-fxml:15.0.1:${platform}"
}

def mainClassName = 'todolist.app.Main'
version = '0.4.0'

java {
  modularity.inferModulePath = true
}


def args = [
    "--add-exports=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED",
    "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior" +
        "=ALL-UNNAMED",
    "--add-exports=javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED",
    "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior" +
        "=com.jfoenix",
    "--add-exports=javafx.controls/com.sun.javafx.binding=com.jfoenix",
    "--illegal-access=warn",
    "--add-opens=javafx.controls/javafx.scene.control.skin=com.jfoenix",
    "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED",
    "--add-opens=java.base/java.lang.reflect=com.jfoenix",
    "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior" +
        "=com.jfoenix",
    "--add-exports=javafx.controls/com.sun.javafx.scene.control=com.jfoenix",
    "--add-exports=javafx.base/com.sun.javafx.binding=com.jfoenix",
    "--add-exports=javafx.graphics/com.sun.javafx.stage=com.jfoenix",
    "--add-exports=javafx.base/com.sun.javafx.event=com.jfoenix"
]

application {
  //noinspection GroovyAccessibility
  mainModule = 'todolist.app.main'
  mainClass = mainClassName
  applicationDefaultJvmArgs = args
}

jlink {
  options = ['--strip-debug', '--compress', '2', '--no-header-files',
             '--no-man-pages']
  launcher {
    name = project.name
    noConsole = true
    jvmArgs = args
  }
  targetPlatform('win') {
    jdkHome = jdkDownload("https://github.com/AdoptOpenJDK" +
        "/openjdk15-binaries/releases/download/jdk-15.0.2%2B7" +
        "/OpenJDK15U-jdk_x64_windows_hotspot_15.0.2_7.zip")
    addExtraModulePath('jmods/javafx-jmods-15-win')
  }
  targetPlatform('linux') {
    jdkHome = jdkDownload("https://github.com/AdoptOpenJDK" +
        "/openjdk15-binaries/releases/download/jdk-15.0.2%2B7" +
        "/OpenJDK15U-jdk_x64_linux_hotspot_15.0.2_7.tar.gz")
    addExtraModulePath('jmods/javafx-jmods-15-linux')
  }
  targetPlatform('osx') {
    jdkHome = jdkDownload("https://github.com/AdoptOpenJDK" +
        "/openjdk15-binaries/releases/download/jdk-15.0.2%2B7" +
        "/OpenJDK15U-jdk_x64_mac_hotspot_15.0.2_7.tar.gz")
    addExtraModulePath('jmods/javafx-jmods-15-osx')
  }
  jpackage {
    targetPlatformName = platform
    if (platform == 'win') {
      skipInstaller = false
      installerOptions = ['--win-menu', '--win-shortcut']
    } else {
      skipInstaller = true
    }
    jvmArgs = args
    imageName = project.name
    installerName = project.name
    appVersion = version
  }
}

compileJava {
  options.release = 15
}

jar {
  manifest {
    attributes 'Main-Class': mainClassName
  }
  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

test {
  useJUnitPlatform()
}

sourceSets {
  test {
    java {
      srcDir 'src/test'
    }
  }
  main {
    java {
      srcDir 'src/main'
    }
  }
}
